/*
 *
 * SystemFontRus5x7
 *
 *
 * File Name           : SystemFontRus5x7.h
 * Date                : 28 Oct 2008
 * Font size in bytes  : 470
 * Font width          : 5
 * Font height         : 7
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 94
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined (ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef CHANGEDRUS5x7_H
#define CHANGEDRUS5x7_H

#define CHANGEDRUS5x7_WIDTH 5
#define CHANGEDRUS5x7_HEIGHT 7

/*
 * added to allow fontname to match header file name.
 * as well as keep the old name for backward compability
 */

#define ChangedRus5x7 ChangedRus5x7

static const uint8_t ChangedRus5x7[] PROGMEM = {
    0x0, 0x0, // size of zero indicates fixed width font, actual length is width * height
    0x05, // width
    0x07, // height
    0x20, // first char
    0x9F, // char count

    // Fixed width; char width table not used !!!!

    // font data
    0x00, 0x00, 0x00, 0x00, 0x00,// (space)
	0x00, 0x00, 0x5F, 0x00, 0x00,// !
	0x00, 0x07, 0x00, 0x07, 0x00,// "
	0x14, 0x7F, 0x14, 0x7F, 0x14,// #
	0x24, 0x2A, 0x7F, 0x2A, 0x12,// $
	0x23, 0x13, 0x08, 0x64, 0x62,// %
	0x36, 0x49, 0x55, 0x22, 0x50,// &
	0x22, 0x41, 0x49, 0x49, 0x3e,// '
	0x00, 0x1C, 0x22, 0x41, 0x00,// (
	0x00, 0x41, 0x22, 0x1C, 0x00,// )
	0x08, 0x2A, 0x1C, 0x2A, 0x08,// *
	0x08, 0x08, 0x3E, 0x08, 0x08,// +
	0x7f, 0x49, 0x49, 0x49, 0x33,// ,
	0x08, 0x08, 0x08, 0x08, 0x08,// -
	0x7f, 0x08, 0x3e, 0x41, 0x3e,// .
	0x20, 0x10, 0x08, 0x04, 0x02,// /
	0x3E, 0x51, 0x49, 0x45, 0x3E,// 0
	0x00, 0x42, 0x7F, 0x40, 0x00,// 1
	0x42, 0x61, 0x51, 0x49, 0x46,// 2
	0x21, 0x41, 0x45, 0x4B, 0x31,// 3
	0x18, 0x14, 0x12, 0x7F, 0x10,// 4
	0x27, 0x45, 0x45, 0x45, 0x39,// 5
	0x3C, 0x4A, 0x49, 0x49, 0x30,// 6
	0x01, 0x71, 0x09, 0x05, 0x03,// 7
	0x36, 0x49, 0x49, 0x49, 0x36,// 8
	0x06, 0x49, 0x49, 0x29, 0x1E,// 9
	0x00, 0x36, 0x36, 0x00, 0x00,// :
	0x77, 0x08, 0x7f, 0x08, 0x77,// ;
	0x00, 0x08, 0x14, 0x22, 0x41,// <
	0x14, 0x14, 0x14, 0x14, 0x14,// =
	0x41, 0x22, 0x14, 0x08, 0x00,// >
	0x02, 0x01, 0x51, 0x09, 0x06,// ?
	0x32, 0x49, 0x79, 0x41, 0x3E,// @
	0x1c, 0x22, 0x7f, 0x22, 0x1c,// A
	0x7f, 0x10, 0x08, 0x04, 0x7f,// B
	0x3E, 0x41, 0x41, 0x41, 0x22,// C
	0x7f, 0x49, 0x49, 0x49, 0x36,// D
	0x47, 0x28, 0x10, 0x08, 0x07,// E
	0x7e, 0x11, 0x11, 0x11, 0x7e,// F
	0x7f, 0x01, 0x01, 0x01, 0x7f,// G
	0x7f, 0x09, 0x09, 0x09, 0x06,// H
	0x7f, 0x40, 0x7f, 0x40, 0x7f,// I
	0x3e, 0x41, 0x41, 0x41, 0x3e,// J
	0x20, 0x41, 0x3f, 0x01, 0x7f,// K
	0xe0, 0x51, 0x4f, 0x41, 0xff,// L
	0x00, 0x7f, 0x48, 0x48, 0x30,// M
	0x01, 0x01, 0x7f, 0x01, 0x01,// N
	0x7f, 0x40, 0x7f, 0x40, 0xff,// O
	0x41, 0x49, 0x49, 0x49, 0x36,// P
	0x7c, 0x21, 0x12, 0x09, 0x7c,// Q
	0x7f, 0x08, 0x14, 0x22, 0x41,// R
	0x7f, 0x48, 0x30, 0x00, 0x7f,// S
	0x7f, 0x49, 0x49, 0x49, 0x41,// T
	0x7f, 0x01, 0x01, 0x01, 0x03,// U
	0x7f, 0x02, 0x0c, 0x02, 0x7f,// V
	0x7f, 0x40, 0x40, 0x40, 0xff,// W
	0x07, 0x08, 0x08, 0x08, 0x7f,// X
	0x7F, 0x08, 0x08, 0x08, 0x7F,// Y
	0x46, 0x29, 0x19, 0x09, 0x7f,// Z
	0x63, 0x14, 0x08, 0x14, 0x63,// [
	0x02, 0x04, 0x08, 0x10, 0x20,// "\"
	0x01, 0x7f, 0x48, 0x48, 0x30,// ]



};

#endif
